
<data disableLegacyBoxcarringMode="false" enableBatchRequests="false" enableBoxcarring="false" name="datasource_DataService" serviceNamespace="http://ws.wso2.org/dataservice" serviceStatus="active" transports="http https">
    <description>single service for whole database</description>
    <config id="default">
        <property name="carbon_datasource_name">MySQLConnection</property>
    </config>
    <query id="select_all_flights_customers_query" useConfig="default">
        <sql>SELECT accountID, name, street, city, state, postal, country, accountType, creationDate, miles FROM flights_customers</sql>
        <result element="flights_customersCollection" rowName="flights_customers">
            <element column="accountID" name="accountID" xsdType="xs:string"/>
            <element column="country" name="country" xsdType="xs:string"/>
            <element column="city" name="city" xsdType="xs:string"/>
            <element column="street" name="street" xsdType="xs:string"/>
            <element column="accountType" name="accountType" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="state" name="state" xsdType="xs:string"/>
            <element column="postal" name="postal" xsdType="xs:string"/>
            <element column="creationDate" name="creationDate" xsdType="xs:timestamp"/>
            <element column="miles" name="miles" xsdType="xs:integer"/>
        </result>
    </query>
    <resource method="GET" path="flights_customers">
        <call-query href="select_all_flights_customers_query"/>
    </resource>
    <query id="insert_flights_customers_query" useConfig="default">
        <sql>INSERT INTO flights_customers(accountID,country,city,street,accountType,name,state,postal,creationDate,miles) VALUES(?,?,?,?,?,?,?,?,?,?)</sql>
        <param name="accountID" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="country" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="city" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="street" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="accountType" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="state" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="postal" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="creationDate" ordinal="9" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="miles" ordinal="10" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="POST" path="flights_customers">
        <call-query href="insert_flights_customers_query">
            <with-param name="accountID" query-param="accountID"/>
            <with-param name="country" query-param="country"/>
            <with-param name="city" query-param="city"/>
            <with-param name="street" query-param="street"/>
            <with-param name="accountType" query-param="accountType"/>
            <with-param name="name" query-param="name"/>
            <with-param name="state" query-param="state"/>
            <with-param name="postal" query-param="postal"/>
            <with-param name="creationDate" query-param="creationDate"/>
            <with-param name="miles" query-param="miles"/>
        </call-query>
    </resource>
    <query id="select_all_flights_transactions_query" useConfig="default">
        <sql>SELECT transactionID, amount, customerRef, flightID, region FROM flights_transactions</sql>
        <result element="flights_transactionsCollection" rowName="flights_transactions">
            <element column="amount" name="amount" xsdType="xs:integer"/>
            <element column="customerRef" name="customerRef" xsdType="xs:string"/>
            <element column="flightID" name="flightID" xsdType="xs:string"/>
            <element column="region" name="region" xsdType="xs:string"/>
            <element column="transactionID" name="transactionID" xsdType="xs:string"/>
        </result>
    </query>
    <resource method="GET" path="flights_transactions">
        <call-query href="select_all_flights_transactions_query"/>
    </resource>
    <query id="insert_flights_transactions_query" useConfig="default">
        <sql>INSERT INTO flights_transactions(amount,customerRef,flightID,region,transactionID) VALUES(?,?,?,?,?)</sql>
        <param name="amount" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="customerRef" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="flightID" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="region" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="transactionID" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <resource method="POST" path="flights_transactions">
        <call-query href="insert_flights_transactions_query">
            <with-param name="amount" query-param="amount"/>
            <with-param name="customerRef" query-param="customerRef"/>
            <with-param name="flightID" query-param="flightID"/>
            <with-param name="region" query-param="region"/>
            <with-param name="transactionID" query-param="transactionID"/>
        </call-query>
    </resource>
    <query id="update_flights_transactions_query" useConfig="default">
        <sql>UPDATE flights_transactions SET amount=?,customerRef=?,flightID=?,region=? WHERE transactionID=?</sql>
        <param name="amount" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="customerRef" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="flightID" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="region" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="transactionID" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <resource method="PUT" path="flights_transactions">
        <call-query href="update_flights_transactions_query">
            <with-param name="amount" query-param="amount"/>
            <with-param name="customerRef" query-param="customerRef"/>
            <with-param name="flightID" query-param="flightID"/>
            <with-param name="region" query-param="region"/>
            <with-param name="transactionID" query-param="transactionID"/>
        </call-query>
    </resource>
    <query id="delete_flights_transactions_query" useConfig="default">
        <sql>DELETE FROM flights_transactions WHERE transactionID=?</sql>
        <param name="transactionID" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <resource method="DELETE" path="flights_transactions">
        <call-query href="delete_flights_transactions_query">
            <with-param name="transactionID" query-param="transactionID"/>
        </call-query>
    </resource>
    <query id="select_all_qantas_query" useConfig="default">
        <sql>SELECT airline, flightCode, fromAirportCode, toAirportCode, departureDate, price, planeType, totalSeats, emptySeats FROM qantas</sql>
        <result element="qantasCollection" rowName="qantas">
            <element column="flightCode" name="flightCode" xsdType="xs:string"/>
            <element column="price" name="price" xsdType="xs:double"/>
            <element column="departureDate" name="departureDate" xsdType="xs:date"/>
            <element column="airline" name="airline" xsdType="xs:string"/>
            <element column="fromAirportCode" name="fromAirportCode" xsdType="xs:string"/>
            <element column="planeType" name="planeType" xsdType="xs:string"/>
            <element column="totalSeats" name="totalSeats" xsdType="xs:integer"/>
            <element column="toAirportCode" name="toAirportCode" xsdType="xs:string"/>
            <element column="emptySeats" name="emptySeats" xsdType="xs:integer"/>
        </result>
    </query>
    <resource method="GET" path="qantas">
        <call-query href="select_all_qantas_query"/>
    </resource>
    <query id="insert_qantas_query" useConfig="default">
        <sql>INSERT INTO qantas(flightCode,price,departureDate,airline,fromAirportCode,planeType,totalSeats,toAirportCode,emptySeats) VALUES(?,?,?,?,?,?,?,?,?)</sql>
        <param name="flightCode" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="price" ordinal="2" paramType="SCALAR" sqlType="DOUBLE" type="IN"/>
        <param name="departureDate" ordinal="3" paramType="SCALAR" sqlType="DATE" type="IN"/>
        <param name="airline" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="fromAirportCode" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="planeType" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="totalSeats" ordinal="7" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="toAirportCode" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="emptySeats" ordinal="9" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="POST" path="qantas">
        <call-query href="insert_qantas_query">
            <with-param name="flightCode" query-param="flightCode"/>
            <with-param name="price" query-param="price"/>
            <with-param name="departureDate" query-param="departureDate"/>
            <with-param name="airline" query-param="airline"/>
            <with-param name="fromAirportCode" query-param="fromAirportCode"/>
            <with-param name="planeType" query-param="planeType"/>
            <with-param name="totalSeats" query-param="totalSeats"/>
            <with-param name="toAirportCode" query-param="toAirportCode"/>
            <with-param name="emptySeats" query-param="emptySeats"/>
        </call-query>
    </resource>
    <query id="update_qantas_query" useConfig="default">
        <sql>UPDATE qantas SET flightCode=?,price=?,departureDate=?,airline=?,fromAirportCode=?,planeType=?,totalSeats=?,toAirportCode=?,emptySeats=? WHERE ID=?</sql>
        <param name="flightCode" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="price" ordinal="2" paramType="SCALAR" sqlType="DOUBLE" type="IN"/>
        <param name="departureDate" ordinal="3" paramType="SCALAR" sqlType="DATE" type="IN"/>
        <param name="airline" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="fromAirportCode" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="planeType" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="totalSeats" ordinal="7" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="toAirportCode" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="emptySeats" ordinal="9" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="ID" ordinal="10" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="PUT" path="qantas">
        <call-query href="update_qantas_query">
            <with-param name="flightCode" query-param="flightCode"/>
            <with-param name="price" query-param="price"/>
            <with-param name="departureDate" query-param="departureDate"/>
            <with-param name="airline" query-param="airline"/>
            <with-param name="fromAirportCode" query-param="fromAirportCode"/>
            <with-param name="planeType" query-param="planeType"/>
            <with-param name="totalSeats" query-param="totalSeats"/>
            <with-param name="toAirportCode" query-param="toAirportCode"/>
            <with-param name="emptySeats" query-param="emptySeats"/>
            <with-param name="ID" query-param="ID"/>
        </call-query>
    </resource>
    <query id="delete_qantas_query" useConfig="default">
        <sql>DELETE FROM qantas WHERE ID=?</sql>
        <param name="ID" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="DELETE" path="qantas">
        <call-query href="delete_qantas_query">
            <with-param name="ID" query-param="ID"/>
        </call-query>
    </resource>
    <query id="select_all_banking_account_query" useConfig="default">
        <sql>SELECT account_id, balance, customer_ref FROM banking_account</sql>
        <result element="banking_accountCollection" rowName="banking_account">
            <element column="account_id" name="account_id" xsdType="xs:integer"/>
            <element column="balance" name="balance" xsdType="xs:double"/>
            <element column="customer_ref" name="customer_ref" xsdType="xs:integer"/>
        </result>
    </query>
    <resource method="GET" path="banking_account">
        <call-query href="select_all_banking_account_query"/>
    </resource>
    <query id="insert_banking_account_query" useConfig="default">
        <sql>INSERT INTO banking_account(account_id,balance,customer_ref) VALUES(?,?,?)</sql>
        <param name="account_id" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="balance" ordinal="2" paramType="SCALAR" sqlType="DOUBLE" type="IN"/>
        <param name="customer_ref" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="POST" path="banking_account">
        <call-query href="insert_banking_account_query">
            <with-param name="account_id" query-param="account_id"/>
            <with-param name="balance" query-param="balance"/>
            <with-param name="customer_ref" query-param="customer_ref"/>
        </call-query>
    </resource>
    <query id="update_banking_account_query" useConfig="default">
        <sql>UPDATE banking_account SET balance=?,customer_ref=? WHERE account_id=?</sql>
        <param name="balance" ordinal="1" paramType="SCALAR" sqlType="DOUBLE" type="IN"/>
        <param name="customer_ref" ordinal="2" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="account_id" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="PUT" path="banking_account">
        <call-query href="update_banking_account_query">
            <with-param name="balance" query-param="balance"/>
            <with-param name="customer_ref" query-param="customer_ref"/>
            <with-param name="account_id" query-param="account_id"/>
        </call-query>
    </resource>
    <query id="delete_banking_account_query" useConfig="default">
        <sql>DELETE FROM banking_account WHERE account_id=?</sql>
        <param name="account_id" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="DELETE" path="banking_account">
        <call-query href="delete_banking_account_query">
            <with-param name="account_id" query-param="account_id"/>
        </call-query>
    </resource>
    <query id="select_all_banking_customer_query" useConfig="default">
        <sql>SELECT customer_id, firstName, lastName FROM banking_customer</sql>
        <result element="banking_customerCollection" rowName="banking_customer">
            <element column="firstName" name="firstName" xsdType="xs:string"/>
            <element column="lastName" name="lastName" xsdType="xs:string"/>
            <element column="customer_id" name="customer_id" xsdType="xs:integer"/>
        </result>
    </query>
    <resource method="GET" path="banking_customer">
        <call-query href="select_all_banking_customer_query"/>
    </resource>
    <query id="insert_banking_customer_query" useConfig="default">
        <sql>INSERT INTO banking_customer(firstName,lastName,customer_id) VALUES(?,?,?)</sql>
        <param name="firstName" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="lastName" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="customer_id" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="POST" path="banking_customer">
        <call-query href="insert_banking_customer_query">
            <with-param name="firstName" query-param="firstName"/>
            <with-param name="lastName" query-param="lastName"/>
            <with-param name="customer_id" query-param="customer_id"/>
        </call-query>
    </resource>
    <query id="update_banking_customer_query" useConfig="default">
        <sql>UPDATE banking_customer SET firstName=?,lastName=? WHERE customer_id=?</sql>
        <param name="firstName" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="lastName" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="customer_id" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="PUT" path="banking_customer">
        <call-query href="update_banking_customer_query">
            <with-param name="firstName" query-param="firstName"/>
            <with-param name="lastName" query-param="lastName"/>
            <with-param name="customer_id" query-param="customer_id"/>
        </call-query>
    </resource>
    <query id="delete_banking_customer_query" useConfig="default">
        <sql>DELETE FROM banking_customer WHERE customer_id=?</sql>
        <param name="customer_id" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="DELETE" path="banking_customer">
        <call-query href="delete_banking_customer_query">
            <with-param name="customer_id" query-param="customer_id"/>
        </call-query>
    </resource>
    <query id="select_all_american_query" useConfig="default">
        <sql>SELECT code1, code2, airlineName, toAirport, fromAirport, takeOffDate, price, planeType, seatsAvailable, totalSeats FROM american</sql>
        <result element="americanCollection" rowName="american">
            <element column="toAirport" name="toAirport" xsdType="xs:string"/>
            <element column="code2" name="code2" xsdType="xs:string"/>
            <element column="code1" name="code1" xsdType="xs:string"/>
            <element column="price" name="price" xsdType="xs:smallint"/>
            <element column="takeOffDate" name="takeOffDate" xsdType="xs:date"/>
            <element column="fromAirport" name="fromAirport" xsdType="xs:string"/>
            <element column="airlineName" name="airlineName" xsdType="xs:string"/>
            <element column="planeType" name="planeType" xsdType="xs:string"/>
            <element column="seatsAvailable" name="seatsAvailable" xsdType="xs:smallint"/>
            <element column="totalSeats" name="totalSeats" xsdType="xs:smallint"/>
        </result>
    </query>
    <resource method="GET" path="american">
        <call-query href="select_all_american_query"/>
    </resource>
    <query id="insert_american_query" useConfig="default">
        <sql>INSERT INTO american(toAirport,code2,code1,price,takeOffDate,fromAirport,airlineName,planeType,seatsAvailable,totalSeats) VALUES(?,?,?,?,?,?,?,?,?,?)</sql>
        <param name="toAirport" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="code2" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="code1" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="price" ordinal="4" paramType="SCALAR" sqlType="SMALLINT" type="IN"/>
        <param name="takeOffDate" ordinal="5" paramType="SCALAR" sqlType="DATE" type="IN"/>
        <param name="fromAirport" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="airlineName" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="planeType" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="seatsAvailable" ordinal="9" paramType="SCALAR" sqlType="SMALLINT" type="IN"/>
        <param name="totalSeats" ordinal="10" paramType="SCALAR" sqlType="SMALLINT" type="IN"/>
    </query>
    <resource method="POST" path="american">
        <call-query href="insert_american_query">
            <with-param name="toAirport" query-param="toAirport"/>
            <with-param name="code2" query-param="code2"/>
            <with-param name="code1" query-param="code1"/>
            <with-param name="price" query-param="price"/>
            <with-param name="takeOffDate" query-param="takeOffDate"/>
            <with-param name="fromAirport" query-param="fromAirport"/>
            <with-param name="airlineName" query-param="airlineName"/>
            <with-param name="planeType" query-param="planeType"/>
            <with-param name="seatsAvailable" query-param="seatsAvailable"/>
            <with-param name="totalSeats" query-param="totalSeats"/>
        </call-query>
    </resource>
    <query id="update_american_query" useConfig="default">
        <sql>UPDATE american SET toAirport=?,code2=?,code1=?,price=?,takeOffDate=?,fromAirport=?,airlineName=?,planeType=?,seatsAvailable=?,totalSeats=? WHERE ID=?</sql>
        <param name="toAirport" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="code2" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="code1" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="price" ordinal="4" paramType="SCALAR" sqlType="SMALLINT" type="IN"/>
        <param name="takeOffDate" ordinal="5" paramType="SCALAR" sqlType="DATE" type="IN"/>
        <param name="fromAirport" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="airlineName" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="planeType" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="seatsAvailable" ordinal="9" paramType="SCALAR" sqlType="SMALLINT" type="IN"/>
        <param name="totalSeats" ordinal="10" paramType="SCALAR" sqlType="SMALLINT" type="IN"/>
        <param name="ID" ordinal="11" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="PUT" path="american">
        <call-query href="update_american_query">
            <with-param name="toAirport" query-param="toAirport"/>
            <with-param name="code2" query-param="code2"/>
            <with-param name="code1" query-param="code1"/>
            <with-param name="price" query-param="price"/>
            <with-param name="takeOffDate" query-param="takeOffDate"/>
            <with-param name="fromAirport" query-param="fromAirport"/>
            <with-param name="airlineName" query-param="airlineName"/>
            <with-param name="planeType" query-param="planeType"/>
            <with-param name="seatsAvailable" query-param="seatsAvailable"/>
            <with-param name="totalSeats" query-param="totalSeats"/>
            <with-param name="ID" query-param="ID"/>
        </call-query>
    </resource>
    <query id="delete_american_query" useConfig="default">
        <sql>DELETE FROM american WHERE ID=?</sql>
        <param name="ID" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="DELETE" path="american">
        <call-query href="delete_american_query">
            <with-param name="ID" query-param="ID"/>
        </call-query>
    </resource>
    <query id="select_all_accounts_query" useConfig="default">
        <sql>SELECT name, street, city, state, postal, country FROM accounts</sql>
        <result element="accountsCollection" rowName="accounts">
            <element column="country" name="country" xsdType="xs:string"/>
            <element column="city" name="city" xsdType="xs:string"/>
            <element column="street" name="street" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="state" name="state" xsdType="xs:string"/>
            <element column="postal" name="postal" xsdType="xs:string"/>
        </result>
    </query>
    <resource method="GET" path="accounts">
        <call-query href="select_all_accounts_query"/>
    </resource>
    <query id="insert_accounts_query" useConfig="default">
        <sql>INSERT INTO accounts(country,city,street,name,state,postal) VALUES(?,?,?,?,?,?)</sql>
        <param name="country" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="city" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="street" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="state" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="postal" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <resource method="POST" path="accounts">
        <call-query href="insert_accounts_query">
            <with-param name="country" query-param="country"/>
            <with-param name="city" query-param="city"/>
            <with-param name="street" query-param="street"/>
            <with-param name="name" query-param="name"/>
            <with-param name="state" query-param="state"/>
            <with-param name="postal" query-param="postal"/>
        </call-query>
    </resource>
    <query id="update_accounts_query" useConfig="default">
        <sql>UPDATE accounts SET country=?,city=?,street=?,name=?,state=?,postal=? WHERE accountID=?</sql>
        <param name="country" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="city" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="street" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="state" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="postal" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="accountID" ordinal="7" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="PUT" path="accounts">
        <call-query href="update_accounts_query">
            <with-param name="country" query-param="country"/>
            <with-param name="city" query-param="city"/>
            <with-param name="street" query-param="street"/>
            <with-param name="name" query-param="name"/>
            <with-param name="state" query-param="state"/>
            <with-param name="postal" query-param="postal"/>
            <with-param name="accountID" query-param="accountID"/>
        </call-query>
    </resource>
    <query id="delete_accounts_query" useConfig="default">
        <sql>DELETE FROM accounts WHERE accountID=?</sql>
        <param name="accountID" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="DELETE" path="accounts">
        <call-query href="delete_accounts_query">
            <with-param name="accountID" query-param="accountID"/>
        </call-query>
    </resource>
    <query id="select_all_flights_query" useConfig="default">
        <sql>SELECT code1, code2, airlineName, toAirport, fromAirport, takeOffDate, price, planeType, seatsAvailable FROM flights</sql>
        <result element="flightsCollection" rowName="flights">
            <element column="toAirport" name="toAirport" xsdType="xs:string"/>
            <element column="code2" name="code2" xsdType="xs:string"/>
            <element column="code1" name="code1" xsdType="xs:string"/>
            <element column="price" name="price" xsdType="xs:smallint"/>
            <element column="takeOffDate" name="takeOffDate" xsdType="xs:date"/>
            <element column="fromAirport" name="fromAirport" xsdType="xs:string"/>
            <element column="airlineName" name="airlineName" xsdType="xs:string"/>
            <element column="planeType" name="planeType" xsdType="xs:string"/>
            <element column="seatsAvailable" name="seatsAvailable" xsdType="xs:string"/>
        </result>
    </query>
    <resource method="GET" path="flights">
        <call-query href="select_all_flights_query"/>
    </resource>
    <query id="insert_flights_query" useConfig="default">
        <sql>INSERT INTO flights(toAirport,code2,code1,price,takeOffDate,fromAirport,airlineName,planeType,seatsAvailable) VALUES(?,?,?,?,?,?,?,?,?)</sql>
        <param name="toAirport" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="code2" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="code1" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="price" ordinal="4" paramType="SCALAR" sqlType="SMALLINT" type="IN"/>
        <param name="takeOffDate" ordinal="5" paramType="SCALAR" sqlType="DATE" type="IN"/>
        <param name="fromAirport" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="airlineName" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="planeType" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="seatsAvailable" ordinal="9" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <resource method="POST" path="flights">
        <call-query href="insert_flights_query">
            <with-param name="toAirport" query-param="toAirport"/>
            <with-param name="code2" query-param="code2"/>
            <with-param name="code1" query-param="code1"/>
            <with-param name="price" query-param="price"/>
            <with-param name="takeOffDate" query-param="takeOffDate"/>
            <with-param name="fromAirport" query-param="fromAirport"/>
            <with-param name="airlineName" query-param="airlineName"/>
            <with-param name="planeType" query-param="planeType"/>
            <with-param name="seatsAvailable" query-param="seatsAvailable"/>
        </call-query>
    </resource>
    <query id="update_flights_query" useConfig="default">
        <sql>UPDATE flights SET toAirport=?,code2=?,code1=?,price=?,takeOffDate=?,fromAirport=?,airlineName=?,planeType=?,seatsAvailable=? WHERE ID=?</sql>
        <param name="toAirport" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="code2" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="code1" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="price" ordinal="4" paramType="SCALAR" sqlType="SMALLINT" type="IN"/>
        <param name="takeOffDate" ordinal="5" paramType="SCALAR" sqlType="DATE" type="IN"/>
        <param name="fromAirport" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="airlineName" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="planeType" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="seatsAvailable" ordinal="9" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="ID" ordinal="10" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="PUT" path="flights">
        <call-query href="update_flights_query">
            <with-param name="toAirport" query-param="toAirport"/>
            <with-param name="code2" query-param="code2"/>
            <with-param name="code1" query-param="code1"/>
            <with-param name="price" query-param="price"/>
            <with-param name="takeOffDate" query-param="takeOffDate"/>
            <with-param name="fromAirport" query-param="fromAirport"/>
            <with-param name="airlineName" query-param="airlineName"/>
            <with-param name="planeType" query-param="planeType"/>
            <with-param name="seatsAvailable" query-param="seatsAvailable"/>
            <with-param name="ID" query-param="ID"/>
        </call-query>
    </resource>
    <query id="delete_flights_query" useConfig="default">
        <sql>DELETE FROM flights WHERE ID=?</sql>
        <param name="ID" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="DELETE" path="flights">
        <call-query href="delete_flights_query">
            <with-param name="ID" query-param="ID"/>
        </call-query>
    </resource>
    <query id="select_all_contacts_query" useConfig="default">
        <sql>SELECT id, firstName, lastName, phone, email, title, department FROM contacts</sql>
        <result element="contactsCollection" rowName="contacts">
            <element column="firstName" name="firstName" xsdType="xs:string"/>
            <element column="lastName" name="lastName" xsdType="xs:string"/>
            <element column="phone" name="phone" xsdType="xs:string"/>
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="title" name="title" xsdType="xs:string"/>
            <element column="department" name="department" xsdType="xs:string"/>
            <element column="email" name="email" xsdType="xs:string"/>
        </result>
    </query>
    <resource method="GET" path="contacts">
        <call-query href="select_all_contacts_query"/>
    </resource>
    <query id="insert_contacts_query" useConfig="default">
        <sql>INSERT INTO contacts(firstName,lastName,phone,id,title,department,email) VALUES(?,?,?,?,?,?,?)</sql>
        <param name="firstName" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="lastName" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="phone" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="id" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="title" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="department" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="email" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <resource method="POST" path="contacts">
        <call-query href="insert_contacts_query">
            <with-param name="firstName" query-param="firstName"/>
            <with-param name="lastName" query-param="lastName"/>
            <with-param name="phone" query-param="phone"/>
            <with-param name="id" query-param="id"/>
            <with-param name="title" query-param="title"/>
            <with-param name="department" query-param="department"/>
            <with-param name="email" query-param="email"/>
        </call-query>
    </resource>
    <query id="update_contacts_query" useConfig="default">
        <sql>UPDATE contacts SET firstName=?,lastName=?,phone=?,title=?,department=?,email=? WHERE id=?</sql>
        <param name="firstName" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="lastName" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="phone" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="title" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="department" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="email" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="id" ordinal="7" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="PUT" path="contacts">
        <call-query href="update_contacts_query">
            <with-param name="firstName" query-param="firstName"/>
            <with-param name="lastName" query-param="lastName"/>
            <with-param name="phone" query-param="phone"/>
            <with-param name="title" query-param="title"/>
            <with-param name="department" query-param="department"/>
            <with-param name="email" query-param="email"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <query id="delete_contacts_query" useConfig="default">
        <sql>DELETE FROM contacts WHERE id=?</sql>
        <param name="id" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
    </query>
    <resource method="DELETE" path="contacts">
        <call-query href="delete_contacts_query">
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
</data>
